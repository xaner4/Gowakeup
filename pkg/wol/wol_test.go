package wol

import (
	"reflect"
	"testing"
)

func TestCreateMagicPacket(t *testing.T) {
	type args struct {
		MACAddress string
	}
	tests := []struct {
		name    string
		args    args
		want    []byte
		wantErr bool
	}{
		{"LowerCaseColon", args{"12:34:56:78:9a:bc"}, []byte{255, 255, 255, 255, 255, 255, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188}, false},
		{"UpperCaseColon", args{"12:34:56:78:9A:BC"}, []byte{255, 255, 255, 255, 255, 255, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188}, false},
		{"LowerCaseHyphen", args{"12-34-56-78-9A-BC"}, []byte{255, 255, 255, 255, 255, 255, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188}, false},
		{"UpperCaseHyphen", args{"12-34-56-78-9A-BC"}, []byte{255, 255, 255, 255, 255, 255, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188, 18, 52, 86, 120, 154, 188}, false},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got, err := CreateMagicPacket(tt.args.MACAddress)
			if (err != nil) != tt.wantErr {
				t.Errorf("CreateMagicPacket() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			if !reflect.DeepEqual(got, tt.want) {
				t.Errorf("CreateMagicPacket() = %v, want %v", got, tt.want)
			}
		})
	}
}
